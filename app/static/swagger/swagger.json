{
    "openapi": "3.0.3",
    "info": {
      "title": "Swagger Petstore - OpenAPI 3.0",
      "description": "This is a simple REST API service for a test task.",
      "contact": {
        "email": "sanromanov94@gmail.com"
      },
      "version": "1.0.11"
    },
    "servers": [
      {
        "url": "http://127.0.0.1:8080/api/v1"
      }
    ],
    "tags": [
      {
        "name": "item",
        "description": "CRUD operations for item"
      }
    ],
    "paths": {
      "/item": {
        "put": {
          "tags": [
            "item"
          ],
          "summary": "Update an existing item",
          "description": "Update an existing item by key",
          "operationId": "updateItem",
          "requestBody": {
            "description": "Update an existing item in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Invalid Key supplied"
            },
            "404": {
              "description": "Item not found"
            }
          }
        },
        "post": {
          "tags": [
            "item"
          ],
          "summary": "Add a new item to the store",
          "description": "Add a new item to the store",
          "operationId": "addItem",
          "requestBody": {
            "description": "Create a new item in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid Key supplied"
            },
            "403": {
              "description": "Key already exists in the store"
            }
          }
        }
      },
      "/item/": {
        "get": {
          "tags": [
            "item"
          ],
          "summary": "Find all items",
          "description": "It shows all existing keys in the store",
          "operationId": "getItems",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Item"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/item/{key}": {
        "get": {
          "tags": [
            "item"
          ],
          "summary": "Finds Item by key",
          "description": "It shows one item in the store",
          "operationId": "findItem",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "description": "Key to filter by",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid key value"
            },
            "404": {
              "description": "Item not found"
            }
          }
        },
        "delete": {
          "tags": [
            "item"
          ],
          "summary": "Delete item by key",
          "description": "This deletes an item from the store by key",
          "operationId": "deleteItem",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "description": "Key to delete",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            },
            "400": {
              "description": "Invalid Key supplied"
            },
            "404": {
              "description": "Item not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Item": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "RandomKey"
            },
            "value": {
              "type": "string",
              "example": "RandomValue"
            }
          }
        }
      }
    },
    "requestBodies": {
      "Item": {
        "description": "Item object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      }
    }
  }